<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.base.dao.MerchantDao">

	<select id="get" resultType="com.bootdo.base.domain.MerchantDO">
	SELECT
  `id`,
  `juridical_person`,
  `brand`,
  `id_card`,
  `phone`,
  `address`,
  `opening_bank`,
  `card_no`,
  `dept_id`,
  `create_date`,
  `update_date`,
  `create_by`,
  `update_by`,
  `payee`
FROM
  base_merchant
WHERE id = #{value} and del_flag = '0'
</select>

	<select id="list" resultType="com.bootdo.base.domain.MerchantDO">
		SELECT
		t.id AS id,
		t.juridical_person AS juridicalPerson,
		t.brand AS brand,
		t.id_card AS idCard,
		t.phone AS phone,
		t.address AS address,
		d.name AS openingBank,
		t.card_no AS cardNo,
		t.dept_id AS deptId,
		t.create_date AS createDate,
		t.update_date AS updateDate,
		t.create_by AS createBy,
		t.update_by AS updateBy,
		t.payee AS payee
		FROM
		base_merchant t LEFT JOIN sys_dict d ON t.opening_bank = d.value AND d.type = 'bank'
		<where>
		t.del_flag = '0'
			<if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="juridicalPerson != null and juridicalPerson != ''"> and juridical_person = #{juridicalPerson} </if>
				  <if test="brand != null and brand != ''"> and brand = #{brand} </if>
				  <if test="idCard != null and idCard != ''"> and id_card = #{idCard} </if>
		  		  <if test="phone != null and phone != ''"> and phone = #{phone} </if>
		  		  <if test="address != null and address != ''"> and address = #{address} </if>
		  		  <if test="openingBank != null and openingBank != ''"> and opening_bank = #{openingBank} </if>
		  		  <if test="cardNo != null and cardNo != ''"> and card_no = #{cardNo} </if>
		  		  <if test="deptId != null and deptId != ''"> and dept_id = #{deptId} </if>
		  		  <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		  		  <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by t.create_date desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from base_merchant
		 <where>
			 del_flag = '0'
			 <if test="id != null and id != ''"> and id = #{id} </if>
			 <if test="juridicalPerson != null and juridicalPerson != ''"> and juridical_person = #{juridicalPerson} </if>
			 <if test="brand != null and brand != ''"> and brand = #{brand} </if>
			 <if test="idCard != null and idCard != ''"> and id_card = #{idCard} </if>
			 <if test="phone != null and phone != ''"> and phone = #{phone} </if>
			 <if test="address != null and address != ''"> and address = #{address} </if>
			 <if test="openingBank != null and openingBank != ''"> and opening_bank = #{openingBank} </if>
			 <if test="cardNo != null and cardNo != ''"> and card_no = #{cardNo} </if>
			 <if test="deptId != null and deptId != ''"> and dept_id = #{deptId} </if>
			 <if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			 <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
			 <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
			 <if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.base.domain.MerchantDO">
		insert into base_merchant
		(
			`juridical_person`,`brand`,`id_card`,`phone`,`address`,`opening_bank`,`card_no`,`dept_id`,`create_date`,`update_date`,`create_by`,`update_by`,`del_flag`,`order_id`,`payee`
		)
		values
		(
		#{juridicalPerson},
		#{brand},
		#{idCard},
		#{phone},
		#{address},
		#{openingBank},
	    #{cardNo},
		#{deptId},
		#{createDate},
		#{updateDate},
		#{createBy},
		#{updateBy},
		#{delFlag},
		#{orderId},
		#{payee}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.base.domain.MerchantDO">
		update base_merchant
		<set>
			<if test="juridicalPerson != null and juridicalPerson != ''">juridical_person = #{juridicalPerson}, </if>
			<if test="brand != null and brand != ''">brand = #{brand}, </if>
			<if test="idCard != null and idCard != ''">id_card = #{idCard}, </if>
			<if test="phone != null and phone != ''">phone = #{phone}, </if>
			<if test="address != null and address != ''">address = #{address}, </if>
			<if test="openingBank != null and openingBank != ''">opening_bank = #{openingBank}, </if>
			<if test="cardNo != null and cardNo != ''">card_no = #{cardNo}, </if>
			<if test="deptId != null and deptId != ''">dept_id = #{deptId}, </if>
			<if test="createBy != null and createBy != ''">create_by = #{createBy}, </if>
			<if test="createDate != null and createDate != ''">create_date = #{createDate}, </if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy}, </if>
			<if test="updateDate != null and updateDate != ''">update_date = #{updateDate}, </if>
			<if test="delFlag != null and delFlag != ''">del_flag = #{delFlag}, </if>
			<if test="payee != null and payee != ''">payee = #{payee} </if>
		</set>
		where id = #{id}
	</update>
	
	<update id="remove">
		update base_merchant set del_flag = '1' where id = #{value}
	</update>
	
	<update id="batchRemove">
		update base_merchant set del_flag = '1' where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	<insert id="batchInsert" >
		insert into base_merchant_copy
		(
		`juridical_person`,`brand`,`id_card`,`phone`,`address`,`opening_bank`,`card_no`,`dept_id`,`create_date`,`update_date`,`create_by`,`update_by`,`del_flag`,`order_id`,`payee`
		)
		values
		<foreach collection ="merchantDOList" item="merchant" separator =",">
			(
			#{merchant.juridicalPerson},
			#{merchant.brand},
			#{merchant.idCard},
			#{merchant.phone},
			#{merchant.address},
			#{merchant.openingBank},
			#{merchant.cardNo},
			#{merchant.deptId},
			#{merchant.createDate},
			#{merchant.updateDate},
			#{merchant.createBy},
			#{merchant.updateBy},
			'0',
			#{merchant.orderId},
			#{merchant.payee}
			)
		</foreach >
	</insert>
	<insert id="synchronization" >
		insert into base_merchant
		select
		null,
		`juridical_person`,`brand`,`id_card`,`phone`,`address`,`opening_bank`,`card_no`, `dept_id`,`create_date`,null,`create_by`,null,'0',`order_id`,`payee` from base_merchant_copy r where r.order_id=#{orderId} and r.del_flag='0' group by  r.brand,r.id_card
	</insert>
	<delete id="duplicate">
		DELETE
		FROM
		base_merchant_copy
		WHERE id_card IN
		(SELECT
		a.id_card
		FROM
		(SELECT
		c.id_card AS id_card
		FROM
		base_merchant r,
		base_merchant_copy c
		WHERE r.id_card = c.id_card
		AND r.dept_id = c.dept_id
		AND r.del_flag = '0'
		AND c.`order_id` =#{orderId}) a)
		and
		brand in
		(SELECT
		d.brand
		FROM
		(SELECT
		e.brand AS brand
		FROM
		base_merchant f,
		base_merchant_copy e
		WHERE f.brand = e.brand
		AND f.dept_id = e.dept_id
		AND f.del_flag = '0'
		AND e.`order_id` =#{orderId}) d)
	</delete>
	<delete id="removeCopy">
		delete from base_merchant_copy where order_id = #{orderId}
	</delete>
</mapper>